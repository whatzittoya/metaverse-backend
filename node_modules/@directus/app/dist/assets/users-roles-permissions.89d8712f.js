import{a as n,o as d,b as u,w as o,l as e,E as s,e as i}from"./runtime-core.esm-bundler.fe249c5c.js";const c={class:"markdown-body"},h=e("em",null,"who can access what",-1),m=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/users-roles-permissions-20220909/users-roles-permissions-20220907A.webp",alt:"Users, Roles and Permissions"})],-1),p={class:"tip hint"},f=e("div",{class:"hint-title"},"Before You Begin",-1),_={class:"tip hint"},g=e("div",{class:"hint-title"},"Learn More",-1),w=e("p",null,[s("In order to understand how users, roles, and permissions work in Directus, a conceptual understanding of "),e("em",null,"how they work in general"),s(" will be helpful. The following few paragraphs will introduce you to how users, roles, and permissions work within a relational database. If you\u2019re already familiar with these concepts, feel free to skip to "),e("a",{href:"#how-it-works-in-directus"},"How it Works in Directus"),s(".")],-1),y=e("h3",{id:"users",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#users"},"#"),s(" Users")],-1),b=e("code",null,"users",-1),v=e("em",null,"users",-1),k=e("em",null,"\u201Cdata\u201D",-1),x=e("p",null,[s("Projects typically have many different kinds of users. For example, you\u2019ll need developers and administrators to design the data model as well as manage all its data. Your team may have other users, such as data analysts, content writers, or managers who need to access to some sensitive data, but not the entire data model. Finally, you might have end-users, such as customers, subscribers, 3rd party sellers, "),e("em",null,"and beyond"),s(" who need access to their own personal data, but should not be able to access any other business data. Therefore, we need to be able to create permissions to define what a user can and can\u2019t access.")],-1),D=e("div",{class:"tip hint"},[e("p",null,[s("Another key point is that a user "),e("em",null,"does not need to be a person at all"),s(". A user could be an AI bot, chat bot, API, or any other entity that can login and interact with the database.")])],-1),R=e("h3",{id:"roles",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#roles"},"#"),s(" Roles")],-1),T=e("em",null,"(managers, writers, subscribers, etc)",-1),U=e("p",null,[s("Regardless of your project, your SQL database will "),e("em",null,"always"),s(" need an administrator role and a public role. In addition, you may need any number of custom roles.")],-1),A=e("p",null,[e("strong",null,"Administrators"),e("br"),s(" An administrator role provides complete, unrestricted control over the database, including the data model and all it data. This cannot be limited, as by definition it would no longer be an administrator role. You need at least one user in an administrator role. Otherwise, it would be impossible to fully manage the database.")],-1),I=e("p",null,[e("strong",null,"Public"),e("br"),s(" A public role defines access permissions for unauthenticated requests to the database. That means that if you enable an access permission for this role, "),e("em",null,"everybody has that permission enabled"),s(". Remember, the database has no idea which data you\u2019d want the public to see. So to be safe, all permissions begin turned off by default. It is up to the administrators to re-configure these and define exactly what the public role has access to.")],-1),P=e("p",null,[e("strong",null,"Custom Roles"),e("br"),s(" In addition to these two extreme types of roles, you may need to create more roles each with their own unique set of permissions. The roles you create and the permissions you configure for them are completely open-ended and dependent on your project\u2019s needs.")],-1),j=e("h3",{id:"permissions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#permissions"},"#"),s(" Permissions")],-1),S=e("p",null,[s("Remember, for the majority of projects, it wouldn\u2019t be safe or ethical to give every user full access to the data. Users could accidentally damage data or even take malicious actions against the project and its users. For example, a student may need to be able to "),e("em",null,"see their grade, but not be able to change it"),s(".")],-1),C=e("p",null,[s("Thus, there are four types of permissions for each data table, based on the four CRUD actions you can do to data in a database: "),e("em",null,"create, read, update, and delete"),s("\u2026 Hence you often hear the term CRUD permissions. You can configure CRUD permissions on each data table as desired. For example, you can grant:")],-1),W=e("ul",null,[e("li",null,"read-only permission"),e("li",null,"read and write but not update or delete permissions"),e("li",null,[e("em",null,"any other combination of the four")])],-1),B=e("h3",{id:"business-rules",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#business-rules"},"#"),s(" Business Rules")],-1),Y=e("p",null,"In many cases, you will need to grant permissions to data based on its value, or by some other conditional logic. This type of conditional permission is often called a business rule.",-1),E=e("p",null,[s("To give an example, students should be able to read to their own grades, but not the grades of other students. So you could create a business rule for the "),e("code",null,"student"),s(" role, so that a user can only see his or her own grade.")],-1),F=e("p",null,"Taking this example one step further, we\u2019d also want to allow students to read and create answers to an online test, but not update or delete their test answers once submitted. Then you may need a business rule to crate a submission deadline. Finally, you likely want to restrict each student\u2019s CRUD access to all other student tests.",-1),H=e("p",null,"It is common to have multiple, complex business rules in a project.",-1),L=e("h2",{id:"how-it-works-in-directus",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-it-works-in-directus"},"#"),s(" How it Works in Directus")],-1),q=e("video",{title:"How Users, Roles, & Permissions Work",autoplay:"",playsinline:"",muted:"",loop:"",controls:""},[e("source",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/users-roles-permissions-20220909/how-users-roles-and-permissions-work-20220909A.mp4",type:"video/mp4"})],-1),N=e("p",null,"While you have full reign to configure these using SQL, Directus also provides a complete system to configure and manage users, roles, and permissions without writing a single line of SQL. The process has three key steps.",-1),Q=e("div",{class:"tip hint"},[e("div",{class:"hint-title"},"No Artificial Limits"),e("p",null,"You can create as many roles as you need, (re)assign them to as many users as many times you please, and configure complex granular permissions as desired.")],-1),V=e("div",{class:"tip hint"},[e("p",null,"Remember, the following users, role and permissions systems built into Directus cannot be deleted, however using them is optional. You may configure your own system as desired.")],-1),G=e("h2",{id:"directus-users",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#directus-users"},"#"),s(" Directus Users")],-1),M=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/users-roles-permissions-20220909/users-20220807A.webp",alt:"Users in the Directus Data Studio"})],-1),O=e("strong",null,"Settings > Roles and Permissions",-1),z=e("h2",{id:"directus-roles",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#directus-roles"},"#"),s(" Directus Roles")],-1),J=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/users-roles-permissions-20220909/roles-20220907A.webp",alt:"Roles in the Directus Data Studio"})],-1),K=e("p",null,"You can create as many roles as you need for your project. Directus also comes with built-in administrator and public roles, which cannot be deleted.",-1),X=e("p",null,"The administrator role provides full permissions for all data in the app, and this cannot be limited. You must always have at least one user with an administrator role.",-1),Z=e("p",null,[s("The public role comes with all access permissions turned off by default, but this can be reconfigured as desired. Remember, any access permissions granted to this role will apply to everyone, including unauthenticated web traffic "),e("em",null,"and all existing users"),s(". If you wish to keep the project private, simply keep all permissions turned off.")],-1),$=e("h2",{id:"directus-permissions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#directus-permissions"},"#"),s(" Directus Permissions")],-1),ee=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/users-roles-permissions-20220909/permissions-20220907A.webp",alt:"Roles in the Directus Data Studio"})],-1),se=e("p",null,[s("Directus offers an extremely granular, yet easy to configure permissions system. When you "),e("a",{href:"#create-a-role"},"create a role"),s(", all permissions are turned off by default, allowing you to explicitly grant permissions as desired.")],-1),oe=e("a",{href:"#business-rules"},"business rules",-1),te=e("em",null,"create, read, update, delete, and share",-1),ie=e("em",null,"fifth",-1),re=e("h2",{id:"workflows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#workflows"},"#"),s(" Workflows")],-1),ne=e("p",null,[e("img",{src:"https://cdn.directus.io/docs/v9/configuration/users-roles-permissions/workflows-20220909/workflows-20220909B.webp",alt:"Workflows in the Directus"})],-1),ce="Users, Roles & Permissions",he=!1,me="Users are the individual accounts for authenticating into the API and App. Each user belongs to a Role which defines its access Permissions.",pe="7 min read",fe={__name:"users-roles-permissions",setup(ae,{expose:a}){const r={title:"Users, Roles & Permissions",modularExtension:!1,description:"Users are the individual accounts for authenticating into the API and App. Each user belongs to a Role which defines its access Permissions.",readTime:"7 min read"};return a({frontmatter:r}),(le,de)=>{const t=n("router-link"),l=n("docs-wrapper");return d(),u(l,{frontmatter:r},{default:o(()=>[e("div",c,[e("blockquote",null,[e("p",null,[s("Users, roles, and permissions work together to determine "),h,s(" inside your database. "),i(t,{to:"/docs/getting-started/glossary#users"},{default:o(()=>[s("Users")]),_:1}),s(" are the individual accounts for authenticating into the project. Each user is assigned a "),i(t,{to:"/docs/getting-started/glossary#roles"},{default:o(()=>[s("role")]),_:1}),s(" which defines its "),i(t,{to:"/docs/getting-started/glossary#permissions"},{default:o(()=>[s("access permissions")]),_:1}),s(".")])]),m,e("div",p,[f,e("p",null,[s("We recommend you try the "),i(t,{to:"/docs/getting-started/quickstart.md"},{default:o(()=>[s("Quickstart Guide")]),_:1}),s(" to get an overview of the platform.")])]),e("div",_,[g,e("p",null,[s("To manage users, role and permissions programmatically via the API, please see our API guides on "),i(t,{to:"/docs/reference/system/users.md"},{default:o(()=>[s("users")]),_:1}),s(", "),i(t,{to:"/docs/reference/system/roles.md"},{default:o(()=>[s("roles")]),_:1}),s(", and "),i(t,{to:"/docs/reference/system/permissions.md"},{default:o(()=>[s("permissions")]),_:1}),s(".")])]),w,y,e("p",null,[s("Remember, "),i(t,{to:"/docs/reference/system/users.md"},{default:o(()=>[s("users are data")]),_:1}),s(". They are simply rows in a "),b,s(" data table. It may be easy to forget this if you are new to working with data models, as the term "),v,s(" can create a warm place in our hearts which distinguishes or elevates it above and beyond term "),k,s(". But from the perspective of the data model, that\u2019s not the case. Users are still just data.")]),x,D,R,e("p",null,[s("In many cases, your project will have multiple users doing the same thing "),T,s(". If we assigned permissions directly to the user, we would have to configure the same permissions over and over, which makes it tedious to change configurations for all users doing the same job and also leads to a higher chance of misconfiguration. This problem is an example of "),i(t,{to:"/docs/configuration/data-model.md#avoid-data-duplication"},{default:o(()=>[s("data duplication")]),_:1}),s(". To avoid this, we create roles, configure the role\u2019s permissions once, then assign the role to users as desired.")]),U,A,I,P,j,S,C,W,B,Y,E,F,H,L,q,N,e("ol",null,[e("li",null,[i(t,{to:"/docs/configuration/users-roles-permissions/roles.md#create-a-role"},{default:o(()=>[s("Create a Role")]),_:1})]),e("li",null,[i(t,{to:"/docs/configuration/users-roles-permissions/permissions.md#configure-role-permissions"},{default:o(()=>[s("Configure its Permissions")]),_:1})]),e("li",null,[i(t,{to:"/docs/configuration/users-roles-permissions/roles.md#assign-role-to-user"},{default:o(()=>[s("Assign Role to User")]),_:1})])]),Q,V,G,M,e("p",null,[s("Within the Data Studio, users are managed within the "),i(t,{to:"/docs/app/user-directory.md"},{default:o(()=>[s("User Directory")]),_:1}),s(". However, there are some controls available to assign users to roles in "),O,s(".")]),e("p",null,[s("To learn more, please see our guide on "),i(t,{to:"/docs/configuration/users-roles-permissions/users.md"},{default:o(()=>[s("users")]),_:1}),s(".")]),z,J,K,X,Z,e("p",null,[s("To learn more, see our guide on "),i(t,{to:"/docs/configuration/users-roles-permissions/roles.md"},{default:o(()=>[s("roles")]),_:1}),s(".")]),$,ee,se,e("p",null,[s("There are two other key points to note about Directus. First, the term "),i(t,{to:"/docs/configuration/users-roles-permissions/permissions.md#configure-custom-permissions"},{default:o(()=>[s("custom access permissions")]),_:1}),s(" is used in place of "),oe,s(", however the concept is the same. Second, instead of the standard CRUD permissions, Directus provides CRUDS permissions: "),te,s(". This "),ie,s(" type of permission, share, defines whether a user has permissions to perform "),i(t,{to:"/docs/app/content/shares.md"},{default:o(()=>[s("data sharing")]),_:1}),s(" on items in a collection.")]),e("p",null,[s("To learn more, see our guide on "),i(t,{to:"/docs/configuration/users-roles-permissions/permissions.md"},{default:o(()=>[s("permissions")]),_:1}),s(".")]),re,ne,e("p",null,[s("Workflows are a way to setup structured stages to content authoring and data management. They are created primarily with custom access permissions, but can be enhanced with email notifications, custom "),i(t,{to:"/docs/extensions/interfaces.md"},{default:o(()=>[s("Interfaces")]),_:1}),s(" as well as "),i(t,{to:"/docs/configuration/flows.md"},{default:o(()=>[s("flows")]),_:1}),s(". Directus supports endlessly configurable workflows.")]),e("p",null,[s("To learn more, see our guide on "),i(t,{to:"/docs/configuration/users-roles-permissions/workflows.md"},{default:o(()=>[s("Workflows")]),_:1}),s(".")])])]),_:1})}}};export{fe as default,me as description,he as modularExtension,pe as readTime,ce as title};
