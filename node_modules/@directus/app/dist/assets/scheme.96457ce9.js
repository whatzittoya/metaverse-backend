import{y as A}from"./index.c9885941.entry.js";function D(u,p){for(var l=0;l<p.length;l++){const a=p[l];if(typeof a!="string"&&!Array.isArray(a)){for(const r in a)if(r!=="default"&&!(r in u)){const f=Object.getOwnPropertyDescriptor(a,r);f&&Object.defineProperty(u,r,f.get?f:{enumerable:!0,get:()=>a[r]})}}}return Object.freeze(Object.defineProperty(u,Symbol.toStringTag,{value:"Module"}))}var M={exports:{}};(function(u,p){(function(l){l(A.exports)})(function(l){l.defineMode("scheme",function(){var a="builtin",r="comment",f="string",s="atom",b="number",y="bracket",N=2;function k(e){for(var n={},i=e.split(" "),o=0;o<i.length;++o)n[i[o]]=!0;return n}var w=k("\u03BB case-lambda call/cc class cond-expand define-class define-values exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax define-macro defmacro delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"),C=k("define let letrec let* lambda define-macro defmacro let-syntax letrec-syntax let-values let*-values define-syntax syntax-rules define-values when unless");function O(e,n,i){this.indent=e,this.type=n,this.prev=i}function m(e,n,i){e.indentStack=new O(n,i,e.indentStack)}function Q(e){e.indentStack=e.indentStack.prev}var _=new RegExp(/^(?:[-+]i|[-+][01]+#*(?:\/[01]+#*)?i|[-+]?[01]+#*(?:\/[01]+#*)?@[-+]?[01]+#*(?:\/[01]+#*)?|[-+]?[01]+#*(?:\/[01]+#*)?[-+](?:[01]+#*(?:\/[01]+#*)?)?i|[-+]?[01]+#*(?:\/[01]+#*)?)(?=[()\s;"]|$)/i),I=new RegExp(/^(?:[-+]i|[-+][0-7]+#*(?:\/[0-7]+#*)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?@[-+]?[0-7]+#*(?:\/[0-7]+#*)?|[-+]?[0-7]+#*(?:\/[0-7]+#*)?[-+](?:[0-7]+#*(?:\/[0-7]+#*)?)?i|[-+]?[0-7]+#*(?:\/[0-7]+#*)?)(?=[()\s;"]|$)/i),$=new RegExp(/^(?:[-+]i|[-+][\da-f]+#*(?:\/[\da-f]+#*)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?@[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?[-+](?:[\da-f]+#*(?:\/[\da-f]+#*)?)?i|[-+]?[\da-f]+#*(?:\/[\da-f]+#*)?)(?=[()\s;"]|$)/i),R=new RegExp(/^(?:[-+]i|[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)i|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)@[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)|[-+]?(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)[-+](?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*)?i|(?:(?:(?:\d+#+\.?#*|\d+\.\d*#*|\.\d+#*|\d+)(?:[esfdl][-+]?\d+)?)|\d+#*\/\d+#*))(?=[()\s;"]|$)/i);function j(e){return e.match(_)}function B(e){return e.match(I)}function h(e,n){return n===!0&&e.backUp(1),e.match(R)}function U(e){return e.match($)}return{startState:function(){return{indentStack:null,indentation:0,mode:!1,sExprComment:!1,sExprQuote:!1}},token:function(e,n){if(n.indentStack==null&&e.sol()&&(n.indentation=e.indentation()),e.eatSpace())return null;var i=null;switch(n.mode){case"string":for(var c,o=!1;(c=e.next())!=null;){if(c=='"'&&!o){n.mode=!1;break}o=!o&&c=="\\"}i=f;break;case"comment":for(var c,E=!1;(c=e.next())!=null;){if(c=="#"&&E){n.mode=!1;break}E=c=="|"}i=r;break;case"s-expr-comment":if(n.mode=!1,e.peek()=="("||e.peek()=="[")n.sExprComment=0;else{e.eatWhile(/[^\s\(\)\[\]]/),i=r;break}default:var t=e.next();if(t=='"')n.mode="string",i=f;else if(t=="'")e.peek()=="("||e.peek()=="["?(typeof n.sExprQuote!="number"&&(n.sExprQuote=0),i=s):(e.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),i=s);else if(t=="#")if(e.eat("|"))n.mode="comment",i=r;else if(e.eat(/[tf]/i))i=s;else if(e.eat(";"))n.mode="s-expr-comment",i=r;else{var d=null,g=!1,S=!0;e.eat(/[ei]/i)?g=!0:e.backUp(1),e.match(/^#b/i)?d=j:e.match(/^#o/i)?d=B:e.match(/^#x/i)?d=U:e.match(/^#d/i)?d=h:e.match(/^[-+0-9.]/,!1)?(S=!1,d=h):g||e.eat("#"),d!=null&&(S&&!g&&e.match(/^#[ei]/i),d(e)&&(i=b))}else if(/^[-+0-9.]/.test(t)&&h(e,!0))i=b;else if(t==";")e.skipToEnd(),i=r;else if(t=="("||t=="["){for(var x="",v=e.column(),q;(q=e.eat(/[^\s\(\[\;\)\]]/))!=null;)x+=q;x.length>0&&C.propertyIsEnumerable(x)?m(n,v+N,t):(e.eatSpace(),e.eol()||e.peek()==";"?m(n,v+1,t):m(n,v+e.current().length,t)),e.backUp(e.current().length-1),typeof n.sExprComment=="number"&&n.sExprComment++,typeof n.sExprQuote=="number"&&n.sExprQuote++,i=y}else t==")"||t=="]"?(i=y,n.indentStack!=null&&n.indentStack.type==(t==")"?"(":"[")&&(Q(n),typeof n.sExprComment=="number"&&--n.sExprComment==0&&(i=r,n.sExprComment=!1),typeof n.sExprQuote=="number"&&--n.sExprQuote==0&&(i=s,n.sExprQuote=!1))):(e.eatWhile(/[\w_\-!$%&*+\.\/:<=>?@\^~]/),w&&w.propertyIsEnumerable(e.current())?i=a:i="variable")}return typeof n.sExprComment=="number"?r:typeof n.sExprQuote=="number"?s:i},indent:function(e){return e.indentStack==null?e.indentation:e.indentStack.indent},closeBrackets:{pairs:'()[]{}""'},lineComment:";;"}}),l.defineMIME("text/x-scheme","scheme")})})();const K=M.exports,z=D({__proto__:null,default:K},[M.exports]);export{z as s};
