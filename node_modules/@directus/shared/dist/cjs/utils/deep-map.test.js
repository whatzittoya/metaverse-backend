"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const deep_map_1 = require("./deep-map");
(0, vitest_1.describe)('deepMap', () => {
    const mockIterator = (val, _key) => {
        return `Test ${val}`;
    };
    (0, vitest_1.it)('returns an object mapped where values are the return of the iterator', () => {
        const mockObject = { _and: [{ field: { _eq: 'field' } }] };
        (0, vitest_1.expect)((0, deep_map_1.deepMap)(mockObject, mockIterator)).toStrictEqual({ _and: [{ field: { _eq: 'Test field' } }] });
    });
    (0, vitest_1.it)('returns object param when passed neither an object or an array.', () => {
        const mockObject = 'test string';
        (0, vitest_1.expect)((0, deep_map_1.deepMap)(mockObject, mockIterator)).toBe(mockObject);
    });
    (0, vitest_1.it)('returns an array of the iterators vals', () => {
        const mockObject = ['test', 'test2'];
        (0, vitest_1.expect)((0, deep_map_1.deepMap)(mockObject, mockIterator)).toStrictEqual(['Test test', 'Test test2']);
    });
});
